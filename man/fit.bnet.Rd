% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/2-bnet-fit-inference.R
\name{fit.bnet}
\alias{fit.bnet}
\title{Fit a bnet object}
\usage{
fit.bnet(object, data, nodes = NULL, mle = bnetPar()$mle,
  search = bnetPar()$search, ...)
}
\arguments{
\item{object}{a bnet obejct}

\item{data}{data.frame with names that include the variables of \code{object}}

\item{mle}{logical, use mle estimations or not}

\item{search}{logical, use penalized loglik search or not}

\item{...}{additional parameters to be passed to the bmop fitting functions}
}
\value{
a bnet object with fitted densities and conditional densities
}
\description{
Fit a bnet object
}
\examples{
\dontrun{require(bnlearn)
data(gaussian.test)
bn<-hc(gaussian.test,maxp=2)
plot(bn)
bnet<-as.bnet(bn)
plot(bnet)
is.fitted.bnet(bnet)
bnet<-fit.bnet(bnet,gaussian.test[1:100,]) # just 100 observation
 are used to make computation lighter
is.fitted.bnet(bnet)
plot(bnet$variables$A$prob)
plot(bnet$variables$B$prob)}
X<-rnorm(100)
Y<-rnorm(100)
U<-rnorm(100,mean=X+Y)
V<-rnorm(100,mean=X)
Z<-rnorm(100,mean=U)
data<-data.frame(X,Y,U,V,Z)
mat<-matrix(nrow=5, c(0,0,1,1,0,
                     0,0,1,0,0,
                     0,0,0,0,1,
                     0,0,0,0,0))
bnet<-new_bnet(names(data),mat)
bnet<-fit.bnet(bnet,data)
}

